name: .NET Core Desktop

on:
  push:
    tags:        
      - v*

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Avalonia.One.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Wap_Project_Directory: output    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: One.Toolbox.Desktop/One.Toolbox.Desktop.csproj                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

  
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: One.Toolbox
        path: D:\a\Avalonia.One\Avalonia.One\README.md
           
    - name: Get previous tag
      id: prev-tag
      shell: bash
      run: |
        PREV_TAG=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
        echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT

    - name: Generate release notes
      id: release-notes
      run: |
        if [ -z "${{ steps.prev-tag.outputs.prev_tag }}" ]; then
          RELEASE_NOTES=$(git log --pretty=format:"- %s" HEAD)
        else
          RELEASE_NOTES=$(git log ${{ steps.prev-tag.outputs.prev_tag }}..HEAD --pretty=format:"- %s")
        fi
        echo "release_notes<<EOF" >> $GITHUB_OUTPUT
        echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
       body: |
         ${{ steps.release-notes.outputs.release_notes }}
       tag_name: ${{ github.ref_name }}
       name: Release ${{ github.ref_name }}

         
              
